name: Connector Ops CI - Experimental Airbyte CI Release

# Note this is a workflow simply to test out if github can build using macos

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest']

    steps:
    - name: Checkout Airbyte
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Install Dependencies
      working-directory: airbyte-ci/connectors/pipelines/
      run: poetry install --with dev

    - name: Get version from poetry version --short
      id: get_version
      run: |
        echo "::set-output name=version::$(poetry version --short)"

    - name: Set binary name
      id: get_artifact_name
      run: |
        echo "::set-output name=artifact_name::airbyte-ci-${{steps.get_version.outputs.version}}-${{ matrix.os }}"

    - name: Build Release
      working-directory: airbyte-ci/connectors/pipelines/
      run: poetry poe build-release-binary ${{ steps.get_artifact_name.outputs.artifact_name}}

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.get_artifact_name.outputs.artifact_name}}
        path: airbyte-ci/connectors/pipelines/dist/${{ steps.get_artifact_name.outputs.artifact_name}}

    # - name: Upload Release to GCS
    #   uses: google-github-actions/upload-cloud-storage@master
    #   with:
    #     args: cp airbyte-ci/connectors/pipelines/dist/${{ steps.get_artifact_name.outputs.artifact_name}} gs://airbyte-releases/airbyte-ci/${{ matrix.os }}/${{ steps.get_artifact_name.outputs.artifact_name}}
    #   env:
    #     GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
